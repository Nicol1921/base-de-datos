CREATE TABLESPACE TIENDA_INV01
DATAFILE 'E:\Oracle\18\oradata\XE\XEPDB1\tienda_inv.dbf'
SIZE 100M
AUTOEXTEND ON NEXT 10M MAXSIZE 500M;


CREATE TABLE categorias (
  categoria_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_categoria VARCHAR2(50) NOT NULL
);

CREATE TABLE proveedores (
  proveedor_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_proveedor VARCHAR2(100) NOT NULL
);

ALTER TABLE proveedores
ADD telefono VARCHAR2(20);

CREATE TABLE productos (
  producto_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_producto VARCHAR2(100) NOT NULL,
  descripcion VARCHAR2(200),
  precio NUMBER(10, 2) NOT NULL,
  stock NUMBER DEFAULT 0,
  fecha_creacion DATE,
  fecha_actualizacion DATE,
  categoria_id NUMBER,
  proveedor_id NUMBER,
  FOREIGN KEY (categoria_id) REFERENCES categorias(categoria_id),
  FOREIGN KEY (proveedor_id) REFERENCES proveedores(proveedor_id)
  );

CREATE TABLE clientes (
  cliente_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_cliente VARCHAR2(100) NOT NULL
);

ALTER TABLE clientes
ADD telefono VARCHAR2(20);

CREATE TABLE ventas (
  venta_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER,
  fecha_venta DATE DEFAULT SYSDATE,
  total_venta NUMBER(10, 2),
  FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id)
);

CREATE TABLE detalle_venta (
  detalle_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  venta_id NUMBER NOT NULL,
  producto_id NUMBER NOT NULL,
  cantidad NUMBER NOT NULL,
  precio_unitario NUMBER(10, 2),
  subtotal NUMBER(10, 2),
  FOREIGN KEY (venta_id) REFERENCES ventas(venta_id),
  FOREIGN KEY (producto_id) REFERENCES productos(producto_id)
);

CREATE TABLE inventario (
  inventario_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  producto_id NUMBER NOT NULL,
  tipo_movimiento VARCHAR2(10) CHECK (tipo_movimiento IN ('entrada', 'salida')),
  cantidad NUMBER NOT NULL,
  fecha_actualizacion DATE DEFAULT SYSDATE,
  FOREIGN KEY (producto_id) REFERENCES productos(producto_id)
);

